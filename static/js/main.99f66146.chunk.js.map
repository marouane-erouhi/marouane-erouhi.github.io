{"version":3,"sources":["images/svg/github.svg","images/svg/linkedin.svg","images/svg/codepen.svg","images/profile_img_square.jpg","components/bio.js","components/sections/home.js","components/sections/projects.js","components/sections/contact.js","components/section_container.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","noBreak","whiteSpace","Bio","react_default","a","createElement","className","src","ProfileImage","alt","style","href","target","GithubIcon","width","LinkedinIcon","CodepenIcon","sections_home","id","Projects","Contact","components_section_container","currentSection","page","App","_useState","useState","_useState2","Object","slicedToArray","currentPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gVCQlCC,SAAU,CACZC,WAAY,WAED,SAASC,IAEpB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAQXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAcC,IAAI,OAC5BN,EAAAC,EAAAC,cAAA,sBAAaF,EAAAC,EAAAC,cAAA,QAAMK,MAAOV,GAAb,aACbG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcK,KAAK,qCAAqCC,OAAO,YACxET,EAAAC,EAAAC,cAAA,OAAKI,IAAI,GAAGF,IAAKM,IAAYC,MAAM,QAEvCX,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcK,KAAK,0CAA0CC,OAAO,YAC7ET,EAAAC,EAAAC,cAAA,OAAKI,IAAI,GAAGF,IAAKQ,IAAcD,MAAM,QAGzCX,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcK,KAAK,kCAAkCC,OAAO,YACrET,EAAAC,EAAAC,cAAA,OAAKI,IAAI,GAAGF,IAAKS,IAAaF,MAAM,0BC9BzCG,EAAA,WAEX,OACId,EAAAC,EAAAC,cAAA,WAASa,GAAG,OACRf,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,iKCLG,SAASc,IACpB,OACIhB,EAAAC,EAAAC,cAAA,iCCHO,SAASe,IAEpB,OACIjB,EAAAC,EAAAC,cAAA,+BCEO,IAAAgB,EAAA,SAASC,GACpB,IAAIC,EACJ,OAAOD,GACH,IAAK,OACDC,EAAOpB,EAAAC,EAAAC,cAACY,EAAD,MACP,MACJ,IAAK,WACDM,EAAOpB,EAAAC,EAAAC,cAACc,EAAD,MACP,MACJ,IAAK,UACDI,EAAOpB,EAAAC,EAAAC,cAACe,EAAD,MACP,MACJ,QACIG,EAAOpB,EAAAC,EAAAC,cAACY,EAAD,MAGf,OACId,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACViB,ICNEC,MAdf,WAAe,IAAAC,EACyBC,mBAAS,QADlCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GAMb,OANaA,EAAA,GAOXxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACgB,EAAD,CAAkBC,eAAgBQ,IAClC3B,EAAAC,EAAAC,cAACH,EAAD,QCFc6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlC,EAAAC,EAAAC,cAACiC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.99f66146.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.fa5f6667.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.4094be6a.svg\";","module.exports = __webpack_public_path__ + \"static/media/codepen.b89e0fcd.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile_img_square.b6cf7b0a.jpg\";","import React from 'react';\r\nimport GithubIcon from '../images/svg/github.svg'\r\nimport LinkedinIcon from '../images/svg/linkedin.svg'\r\nimport CodepenIcon from '../images/svg/codepen.svg'\r\nimport ProfileImage from '../images/profile_img_square.jpg'\r\n\r\nimport './bio.css'\r\n\r\nconst noBreak = {\r\n    whiteSpace: 'nowrap'\r\n}\r\nexport default function Bio(){\r\n\r\n    return (\r\n        <div className='split right'>\r\n            {/* <div className=\"nav\">\r\n                <div>\r\n                    <a className=\"nav-item\" href=\"#\">About</a>\r\n                    <a className=\"nav-item\" href=\"#\">Projects</a>\r\n                    <a className=\"nav-item\" href=\"#\">Contact</a>\r\n                </div>\r\n            </div> */}\r\n            <div className=\"centered\">\r\n                <img src={ProfileImage} alt=\"me\" />\r\n                <h2>Marouane <span style={noBreak}>Er-rouhi</span></h2>\r\n                <a className=\"social-icon\" href=\"https://github.com/marouane-erouhi\" target=\"noopener\">\r\n                    <img alt=\"\" src={GithubIcon} width=\"32\" />\r\n                </a>\r\n                <a className=\"social-icon\" href=\"https://www.linkedin.com/in/marouane-e/\" target=\"noopener\">\r\n                    <img alt=\"\" src={LinkedinIcon} width=\"32\" />\r\n                </a>\r\n\r\n                <a className=\"social-icon\" href=\"https://codepen.io/marouane-e/#\" target=\"noopener\">\r\n                    <img alt=\"\" src={CodepenIcon} width=\"32\" />\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './home.css'\r\n\r\nexport default function (){\r\n\r\n    return(\r\n        <section id='bio'>\r\n            <h1>About me</h1>\r\n            <p>I am a student at Humber College studying Game development. I have almost 4 years in programming experience in various languages and technologies.</p>\r\n        </section>    \r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport default function Projects(){\r\n    return(\r\n        <section>\r\n            some projecdts\r\n        </section>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Contact(){\r\n\r\n    return (\r\n        <section>\r\n            contact form\r\n        </section>\r\n    )\r\n}","import React from 'react';\r\nimport './section_container.css'\r\n\r\nimport Home from './sections/home'\r\nimport Projects from './sections/projects'\r\nimport Contact from './sections/contact'\r\n\r\nexport default function(currentSection){\r\n    let page;\r\n    switch(currentSection){\r\n        case 'Home':\r\n            page = <Home />\r\n            break\r\n        case 'Projects':\r\n            page = <Projects />\r\n            break;\r\n        case 'Contact':\r\n            page = <Contact />\r\n            break;\r\n        default:\r\n            page = <Home />\r\n            break;\r\n    }\r\n    return(\r\n        <div className='split left'>\r\n            {page}\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\nimport './App.css';\nimport Bio from './components/bio'\nimport SectionContainer from './components/section_container'\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState('Home')\n\n  const changePage = pageName => {\n    setCurrentPage(pageName)\n  }\n  return (\n    <div className=\"App\">\n      <SectionContainer currentSection={currentPage} />\n      <Bio/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}